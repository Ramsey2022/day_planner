services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - planner_network
  weather_api:
    build: ../planner_weather_api
    image: planner_weather_api-weather_api
    volumes:
      - ../planner_weather_api:/app
    command: flask run --host "0.0.0.0" --port 8080 --reload
    ports:
      - 8080:8080
    networks:
      - planner_network
  parks_api:
    build: ../planner_parks_api
    image: planner_parks_api-parks_api
    volumes:
      - ../planner_parks_api:/app
    command: flask run --host "0.0.0.0" --port 8060 --reload
    ports:
      - 8060:8060
    networks:
      - planner_network
  web:
    restart: always
    build: .
    image: day_planner
    command: ["python3", "manage.py", "runserver", "0.0.0.0:8000"]
    ports:
      - 8000:8000
    volumes:
      - .:/app
    depends_on:
      - db
      - weather_api
      - parks_api
    networks:
      - planner_network

networks:
  planner_network:
    driver: bridge